name: Rust

on:
  push:
    paths-ignore:
      - 'solutions/typescript/**'
      - 'solutions/python/**'
  pull_request:
    paths-ignore:
      - 'solutions/typescript/**'
      - 'solutions/python/**'

defaults:
  run:
    working-directory: solutions/rust

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        rust:
          - stable
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Cache
        id: cache-target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Cargo Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: |
            --manifest-path solutions/rust/Cargo.toml
            --workspace
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        rust:
          - stable
          - nightly
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Cache
        id: cache-target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: |
            --manifest-path solutions/rust/Cargo.toml
            --workspace
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Cache
        id: cache-target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: |
            --all
            --manifest-path solutions/rust/Cargo.toml
            -- --check
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Cache
        id: cache-target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Ensure Clippy
        run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: |
            --all
            --manifest-path solutions/rust/Cargo.toml
            -- -D warnings
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Cargo Audit
        run: cargo install cargo-audit
      - name: Cargo Check
        run: cargo audit
