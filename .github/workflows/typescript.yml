name: TypeScript

on:
  push:
    branches: '**'
    paths:
      - 'solutions/typescript/**'
      - '.github/workflows/typescript.yml'
  pull_request:
    branches: '**'
    paths:
      - 'solutions/typescript/**'
      - '.github/workflows/typescript.yml'

env:
  NPM_PACKAGE_ORG_PREFIX: '@alexaegis/'
  DEPLOY_ARTIFACT_DIR: 'apps/svelte/dist'
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_REMOTE_ONLY: true

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: pnpm setup
        uses: pnpm/action-setup@v2
        with:
          run_install: false
      - name: output pnpm store directory
        id: pnpm-store
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            **/node_modules
            **/.turbo
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: install
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install
      - name: lint
        run: pnpm lint
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: pnpm setup
        uses: pnpm/action-setup@v2
        with:
          run_install: false
      - name: output pnpm store directory
        id: pnpm-store
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            **/node_modules
            **/.turbo
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: install
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install
      - name: test
        run: pnpm test
      - name: upload coverage result to codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: upload coverage result to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage
